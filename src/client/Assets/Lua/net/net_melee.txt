local require = require
local print = print

local typeof = typeof
local character_manager = require "character_manager"
local World = CS.War.Script.World
local msg_pb = require "msg_pb"
local action_pb = require "action_pb"
local net = require "net"
local zone_manager = require "zone_manager"
local BodyPart = CS.War.Game.BodyPart
local HitActionType = CS.War.Game.HitActionType
local GameObjectPool = CS.War.Base.GameObjectPool
local RES_TYPE = CS.War.Base.RES_TYPE
local util = require "util"

local ObjectToMoveType = typeof(CS.War.Scene.ObjectToMove)
local AkSoundEngineLua = CS.War.Script.AkSoundEngineLua

module("net_melee")
--谁挥拳的
function OnMeleeHitBody(sid, hitSid, bodyPart, hitPos,hitType)
	local BodyPartEnumMap = {
		[BodyPart.Head] = 0,
		[BodyPart.Body] = 1,
		[BodyPart.Hand] = 2,
		[BodyPart.Leg] = 3,
	}
	
	if sid ~= nil and hitSid~= nil then
		hitPos = World.GetRealPosition(hitPos.x, hitPos.y, hitPos.z)
		local meleeMsg = action_pb.TMSG_ACTION_SYNC_MELEE()
		meleeMsg.hitSid = hitSid
		meleeMsg.hitBodyPos.x = hitPos.x
		meleeMsg.hitBodyPos.y = hitPos.y
		meleeMsg.hitBodyPos.z = hitPos.z
		meleeMsg.hitBodyPart = BodyPartEnumMap[bodyPart]
		
		--,RES_TYPE.RES_TYPE_DYNAMIC,nPriority)
		--nPriority
		local  nPriority =util.Common_GetHeroRoughDistance(hitPos)
		local config_datas = require "config_datas"
        local effectpath = config_datas.GetEffectPathByID(3)
		GameObjectPool.GetAsync(effectpath, "", function (bloodEffect)
			-- 不用回收，csharp层AutoReleaseToPool组件自动回收
			bloodEffect:GetComponent(ObjectToMoveType):SetPosition(hitPos.x, hitPos.y, hitPos.z)
		end,RES_TYPE.RES_TYPE_DYNAMIC,nPriority)
		net.SendMessage(net.Endpoint_Client, net.Endpoint_Zone, net.Module_Action, msg_pb.MSG_ACTION_SYNC_MELEE, meleeMsg)
	end
end

function OnMeleeHitTank(sid, hitSid, bodyPart, hitPos,hitType,colliderTrans)
	if sid ~= nil and hitSid~= nil then
		hitPos = World.GetRealPosition(hitPos.x, hitPos.y, hitPos.z)
		local meleeMsg = action_pb.TMSG_ACTION_SYNC_MELEE()
		meleeMsg.hitSid = hitSid
		meleeMsg.hitBodyPos.x = hitPos.x
		meleeMsg.hitBodyPos.y = hitPos.y
		meleeMsg.hitBodyPos.z = hitPos.z
		local tank_mgr = require "tank_manager"
		local tank = tank_mgr.Get(hitSid)
		if not tank or not tank.entity then
			return
		end
		
		--获取命中部件
		if colliderTrans == nil  then
			return
		end
		local hitTankPart = tank:GetHitPart(colliderTrans)
		meleeMsg.hitBodyPart = hitTankPart
		net.SendMessage(net.Endpoint_Client, net.Endpoint_Zone, net.Module_Action, msg_pb.MSG_ACTION_SYNC_MELEE, meleeMsg)
	end
end

function OnMeleeHitBodyMSG(sid, meleeMsg)
    
	local character_manager = require "character_manager"    
   	local heroSid = character_manager.heroId
	if heroSid == sid then
        return
    end

    local viewSid = zone_manager.GetWatchTeammateSid()
	
	if meleeMsg and (meleeMsg.hitSid == heroSid or meleeMsg.hitSid == viewSid ) then
		-- 播放声音
		local event = require "event"
		local sound_cfg = require "sound_cfg"
		local soundContext = {}
		soundContext.soundType = sound_cfg.enum_sound_type_cfg.en_sound_type_wound
		soundContext.bPlaySound = true
		event.Trigger(event.SOUND_PLAY_EVENT_NTF,soundContext)
	end
	
	local char = character_manager.Get(meleeMsg.hitSid)
	if char ~= nil then
		local hitPos = meleeMsg.hitBodyPos
		
		--,RES_TYPE.RES_TYPE_DYNAMIC,nPriority)
		--nPriority
		local  nPriority = util.Common_GetHeroRoughDistance(hitPos)
		local config_datas = require "config_datas"
        local effectpath = config_datas.GetEffectPathByID(3)
		GameObjectPool.GetAsync(effectpath, "", function (bloodEffect)
			-- 不用回收，csharp层AutoReleaseToPool组件自动回收
			bloodEffect:GetComponent(ObjectToMoveType):SetPosition(hitPos.x, hitPos.y, hitPos.z)
		end,RES_TYPE.RES_TYPE_DYNAMIC,nPriority)
	end
end